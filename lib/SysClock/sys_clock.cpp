
#include "stm32f4xx.h"
#include "sys_clock.hpp"

volatile uint32_t SysTick_CNT = 0;
uint32_t SysClock = 0;

// TODO: Обернуть в шаблон System

void RCC_DeInit(void)
{
  SET_BIT(RCC->CR, RCC_CR_HSION);
  while (READ_BIT(RCC->CR, RCC_CR_HSIRDY == RESET));
  MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, 0x80U);
  CLEAR_REG(RCC->CFGR);
  while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET);
  CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
  while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET);
  CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON);
  while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET);
  CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  SET_BIT(RCC->CSR, RCC_CSR_RMVF);
}

void RCC_Init(void)
{
  SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SYSCFGEN);
  while (!READ_BIT(RCC->APB2ENR, RCC_APB2ENR_SYSCFGEN))
    ;

  MODIFY_REG(SYSCFG->MEMRMP, SYSCFG_MEMRMP_MEM_MODE, SYSCFG_MEMRMP_MEM_MODE_0);
}

void SetSysClock(uint32_t sys_clock)
{
  SysClock = sys_clock;
  SET_BIT(RCC->CR, RCC_CR_HSEON);
  while (READ_BIT(RCC->CR, RCC_CR_HSERDY == RESET));

  CLEAR_BIT(FLASH->ACR, FLASH_ACR_PRFTEN);
  SET_BIT(FLASH->ACR, FLASH_ACR_PRFTEN);
  MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS);

  MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_CFGR_HPRE_DIV1);
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_CFGR_PPRE1_DIV1);
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, RCC_CFGR_PPRE2_DIV1);
  
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_CFGR_SW_HSE);
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSE)
    ;

  // MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLCFGR_PLLSRC_HSE);
  // MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLM, RCC_PLLCFGR_PLLM_0);
  // MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLN, RCC_PLLCFGR_PLLN_0);
  // MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLP, RCC_PLLCFGR_PLLP_0);


  // SET_BIT(RCC->CR, RCC_CR_PLLON);
  // while(!(RCC->CR & RCC_CR_PLLRDY));

  // MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_CFGR_SW_PLL);
  // while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
  // while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);

}

void SysTick_Init(void)
{
  MODIFY_REG(SysTick->LOAD, SysTick_LOAD_RELOAD_Msk, SysClock / 1000 - 1);
  CLEAR_BIT(SysTick->VAL, SysTick_VAL_CURRENT_Msk);
  SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_TICKINT_Msk);
}

 void delay(volatile uint64_t tck)
{
  while (tck--)
    ;
}

void delay_ms(uint32_t ms)
{
  MODIFY_REG(SysTick->VAL, SysTick_VAL_CURRENT_Msk, SysClock / 1000 - 1);
  SysTick_CNT = ms;
  while (SysTick_CNT)
    ;
}
